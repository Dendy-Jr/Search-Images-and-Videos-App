// Generated by Dagger (https://dagger.dev).
package ui.dendi.finder.videos_presentation.videos;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ui.dendi.finder.core.core.navigation.AppNavDirections;
import ui.dendi.finder.videos_data.local.SearchVideosStorage;
import ui.dendi.finder.videos_domain.usecase.InsertVideoUseCase;
import ui.dendi.finder.videos_domain.usecase.SearchVideosUseCase;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchVideosViewModel_Factory implements Factory<SearchVideosViewModel> {
  private final Provider<AppNavDirections> appNavDirectionsProvider;

  private final Provider<InsertVideoUseCase> insertVideoUseCaseProvider;

  private final Provider<SearchVideosUseCase> searchVideosUseCaseProvider;

  private final Provider<SearchVideosStorage> storageProvider;

  public SearchVideosViewModel_Factory(Provider<AppNavDirections> appNavDirectionsProvider,
      Provider<InsertVideoUseCase> insertVideoUseCaseProvider,
      Provider<SearchVideosUseCase> searchVideosUseCaseProvider,
      Provider<SearchVideosStorage> storageProvider) {
    this.appNavDirectionsProvider = appNavDirectionsProvider;
    this.insertVideoUseCaseProvider = insertVideoUseCaseProvider;
    this.searchVideosUseCaseProvider = searchVideosUseCaseProvider;
    this.storageProvider = storageProvider;
  }

  @Override
  public SearchVideosViewModel get() {
    return newInstance(appNavDirectionsProvider.get(), insertVideoUseCaseProvider.get(), searchVideosUseCaseProvider.get(), storageProvider.get());
  }

  public static SearchVideosViewModel_Factory create(
      Provider<AppNavDirections> appNavDirectionsProvider,
      Provider<InsertVideoUseCase> insertVideoUseCaseProvider,
      Provider<SearchVideosUseCase> searchVideosUseCaseProvider,
      Provider<SearchVideosStorage> storageProvider) {
    return new SearchVideosViewModel_Factory(appNavDirectionsProvider, insertVideoUseCaseProvider, searchVideosUseCaseProvider, storageProvider);
  }

  public static SearchVideosViewModel newInstance(AppNavDirections appNavDirections,
      InsertVideoUseCase insertVideoUseCase, SearchVideosUseCase searchVideosUseCase,
      SearchVideosStorage storage) {
    return new SearchVideosViewModel(appNavDirections, insertVideoUseCase, searchVideosUseCase, storage);
  }
}
