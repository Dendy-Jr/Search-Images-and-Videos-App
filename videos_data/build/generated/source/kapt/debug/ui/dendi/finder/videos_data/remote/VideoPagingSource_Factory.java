// Generated by Dagger (https://dagger.dev).
package ui.dendi.finder.videos_data.remote;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VideoPagingSource_Factory implements Factory<VideoPagingSource> {
  private final Provider<VideosRemoteDataSource> remoteDataSourceProvider;

  private final Provider<String> queryProvider;

  public VideoPagingSource_Factory(Provider<VideosRemoteDataSource> remoteDataSourceProvider,
      Provider<String> queryProvider) {
    this.remoteDataSourceProvider = remoteDataSourceProvider;
    this.queryProvider = queryProvider;
  }

  @Override
  public VideoPagingSource get() {
    return newInstance(remoteDataSourceProvider.get(), queryProvider.get());
  }

  public static VideoPagingSource_Factory create(
      Provider<VideosRemoteDataSource> remoteDataSourceProvider, Provider<String> queryProvider) {
    return new VideoPagingSource_Factory(remoteDataSourceProvider, queryProvider);
  }

  public static VideoPagingSource newInstance(VideosRemoteDataSource remoteDataSource,
      String query) {
    return new VideoPagingSource(remoteDataSource, query);
  }
}
