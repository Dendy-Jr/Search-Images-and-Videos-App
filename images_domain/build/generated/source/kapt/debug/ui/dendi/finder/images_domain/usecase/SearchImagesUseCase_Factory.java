// Generated by Dagger (https://dagger.dev).
package ui.dendi.finder.images_domain.usecase;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ui.dendi.finder.images_domain.repository.ImagesRepository;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchImagesUseCase_Factory implements Factory<SearchImagesUseCase> {
  private final Provider<ImagesRepository> repositoryProvider;

  public SearchImagesUseCase_Factory(Provider<ImagesRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public SearchImagesUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static SearchImagesUseCase_Factory create(Provider<ImagesRepository> repositoryProvider) {
    return new SearchImagesUseCase_Factory(repositoryProvider);
  }

  public static SearchImagesUseCase newInstance(ImagesRepository repository) {
    return new SearchImagesUseCase(repository);
  }
}
