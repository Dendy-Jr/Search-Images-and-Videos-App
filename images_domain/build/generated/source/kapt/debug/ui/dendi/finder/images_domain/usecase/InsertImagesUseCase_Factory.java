// Generated by Dagger (https://dagger.dev).
package ui.dendi.finder.images_domain.usecase;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ui.dendi.finder.images_domain.repository.ImagesRepository;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class InsertImagesUseCase_Factory implements Factory<InsertImagesUseCase> {
  private final Provider<ImagesRepository> repositoryProvider;

  public InsertImagesUseCase_Factory(Provider<ImagesRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public InsertImagesUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static InsertImagesUseCase_Factory create(Provider<ImagesRepository> repositoryProvider) {
    return new InsertImagesUseCase_Factory(repositoryProvider);
  }

  public static InsertImagesUseCase newInstance(ImagesRepository repository) {
    return new InsertImagesUseCase(repository);
  }
}
