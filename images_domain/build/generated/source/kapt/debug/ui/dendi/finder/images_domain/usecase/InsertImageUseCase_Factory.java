// Generated by Dagger (https://dagger.dev).
package ui.dendi.finder.images_domain.usecase;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ui.dendi.finder.favorites_domain.FavoritesImageRepository;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class InsertImageUseCase_Factory implements Factory<InsertImageUseCase> {
  private final Provider<FavoritesImageRepository> repositoryProvider;

  public InsertImageUseCase_Factory(Provider<FavoritesImageRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public InsertImageUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static InsertImageUseCase_Factory create(
      Provider<FavoritesImageRepository> repositoryProvider) {
    return new InsertImageUseCase_Factory(repositoryProvider);
  }

  public static InsertImageUseCase newInstance(FavoritesImageRepository repository) {
    return new InsertImageUseCase(repository);
  }
}
