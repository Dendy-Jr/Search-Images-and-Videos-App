// Generated by Dagger (https://dagger.dev).
package ui.dendi.finder.images_data.remote;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ImagesRemoteDataSource_Factory implements Factory<ImagesRemoteDataSource> {
  private final Provider<ImagesApi> imagesApiProvider;

  public ImagesRemoteDataSource_Factory(Provider<ImagesApi> imagesApiProvider) {
    this.imagesApiProvider = imagesApiProvider;
  }

  @Override
  public ImagesRemoteDataSource get() {
    return newInstance(imagesApiProvider.get());
  }

  public static ImagesRemoteDataSource_Factory create(Provider<ImagesApi> imagesApiProvider) {
    return new ImagesRemoteDataSource_Factory(imagesApiProvider);
  }

  public static ImagesRemoteDataSource newInstance(ImagesApi imagesApi) {
    return new ImagesRemoteDataSource(imagesApi);
  }
}
