// Generated by Dagger (https://dagger.dev).
package ui.dendi.finder.images_data.repository;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ui.dendi.finder.images_data.remote.ImagesRemoteDataSource;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ImagesRepositoryImpl_Factory implements Factory<ImagesRepositoryImpl> {
  private final Provider<ImagesRemoteDataSource> remoteDataSourceProvider;

  public ImagesRepositoryImpl_Factory(Provider<ImagesRemoteDataSource> remoteDataSourceProvider) {
    this.remoteDataSourceProvider = remoteDataSourceProvider;
  }

  @Override
  public ImagesRepositoryImpl get() {
    return newInstance(remoteDataSourceProvider.get());
  }

  public static ImagesRepositoryImpl_Factory create(
      Provider<ImagesRemoteDataSource> remoteDataSourceProvider) {
    return new ImagesRepositoryImpl_Factory(remoteDataSourceProvider);
  }

  public static ImagesRepositoryImpl newInstance(ImagesRemoteDataSource remoteDataSource) {
    return new ImagesRepositoryImpl(remoteDataSource);
  }
}
