// Generated by Dagger (https://dagger.dev).
package ui.dendi.finder.images_data.remote;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ImagesPagingSource_Factory implements Factory<ImagesPagingSource> {
  private final Provider<ImagesRemoteDataSource> remoteDataSourceProvider;

  private final Provider<String> queryProvider;

  private final Provider<String> typeProvider;

  private final Provider<String> categoryProvider;

  private final Provider<String> orientationProvider;

  private final Provider<String> colorsProvider;

  public ImagesPagingSource_Factory(Provider<ImagesRemoteDataSource> remoteDataSourceProvider,
      Provider<String> queryProvider, Provider<String> typeProvider,
      Provider<String> categoryProvider, Provider<String> orientationProvider,
      Provider<String> colorsProvider) {
    this.remoteDataSourceProvider = remoteDataSourceProvider;
    this.queryProvider = queryProvider;
    this.typeProvider = typeProvider;
    this.categoryProvider = categoryProvider;
    this.orientationProvider = orientationProvider;
    this.colorsProvider = colorsProvider;
  }

  @Override
  public ImagesPagingSource get() {
    return newInstance(remoteDataSourceProvider.get(), queryProvider.get(), typeProvider.get(), categoryProvider.get(), orientationProvider.get(), colorsProvider.get());
  }

  public static ImagesPagingSource_Factory create(
      Provider<ImagesRemoteDataSource> remoteDataSourceProvider, Provider<String> queryProvider,
      Provider<String> typeProvider, Provider<String> categoryProvider,
      Provider<String> orientationProvider, Provider<String> colorsProvider) {
    return new ImagesPagingSource_Factory(remoteDataSourceProvider, queryProvider, typeProvider, categoryProvider, orientationProvider, colorsProvider);
  }

  public static ImagesPagingSource newInstance(ImagesRemoteDataSource remoteDataSource,
      String query, String type, String category, String orientation, String colors) {
    return new ImagesPagingSource(remoteDataSource, query, type, category, orientation, colors);
  }
}
