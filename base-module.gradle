apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdk ConfigData.compileSdkVersion

    defaultConfig {
        minSdk ConfigData.minSdkVersion
        targetSdk ConfigData.targetSdkVersion
        versionCode ConfigData.versionCode
        versionName ConfigData.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        kapt {
            arguments {
                arg("room.schemaLocation", "$rootDir/schemas")
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += "-opt-in=kotlin.ExperimentalStdlibApi"
        freeCompilerArgs += "-opt-in=kotlinx.serialization.ExperimentalSerializationApi"
        freeCompilerArgs += "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
        freeCompilerArgs += '-opt-in=kotlinx.coroutines.FlowPreview'
        freeCompilerArgs += '-opt-in=kotlinx.coroutines.DelicateCoroutinesApi'
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
        freeCompilerArgs += "-opt-in=kotlin.time.ExperimentalTime"
        freeCompilerArgs += "-Xcontext-receivers"
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    kapt Dependencies.daggerHiltCompiler
    implementation Dependencies.daggerHilt

    implementation(Dependencies.coroutines)
    implementation(Dependencies.serialization)
}