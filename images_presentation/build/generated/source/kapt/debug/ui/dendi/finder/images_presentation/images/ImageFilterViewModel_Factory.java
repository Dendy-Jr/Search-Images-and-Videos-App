// Generated by Dagger (https://dagger.dev).
package ui.dendi.finder.images_presentation.images;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ui.dendi.finder.images_data.local.ImagesFilterStorage;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ImageFilterViewModel_Factory implements Factory<ImageFilterViewModel> {
  private final Provider<ImagesFilterStorage> storageProvider;

  public ImageFilterViewModel_Factory(Provider<ImagesFilterStorage> storageProvider) {
    this.storageProvider = storageProvider;
  }

  @Override
  public ImageFilterViewModel get() {
    return newInstance(storageProvider.get());
  }

  public static ImageFilterViewModel_Factory create(Provider<ImagesFilterStorage> storageProvider) {
    return new ImageFilterViewModel_Factory(storageProvider);
  }

  public static ImageFilterViewModel newInstance(ImagesFilterStorage storage) {
    return new ImageFilterViewModel(storage);
  }
}
