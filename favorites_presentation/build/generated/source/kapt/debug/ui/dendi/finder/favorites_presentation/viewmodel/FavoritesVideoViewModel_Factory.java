// Generated by Dagger (https://dagger.dev).
package ui.dendi.finder.favorites_presentation.viewmodel;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ui.dendi.finder.core.core.ResourceProvider;
import ui.dendi.finder.core.core.managers.DialogManager;
import ui.dendi.finder.favorites_domain.videos.usecase.ClearFavoriteVideosUseCase;
import ui.dendi.finder.favorites_domain.videos.usecase.DeleteFavoriteVideoUseCase;
import ui.dendi.finder.videos_domain.usecase.GetFavoriteVideosUseCase;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FavoritesVideoViewModel_Factory implements Factory<FavoritesVideoViewModel> {
  private final Provider<ClearFavoriteVideosUseCase> clearAllFavoriteVideosUseCaseProvider;

  private final Provider<DeleteFavoriteVideoUseCase> deleteFavoriteVideoUseCaseProvider;

  private final Provider<DialogManager> dialogManagerProvider;

  private final Provider<GetFavoriteVideosUseCase> getFavoriteVideosUseCaseProvider;

  private final Provider<ResourceProvider> resourceProvider;

  public FavoritesVideoViewModel_Factory(
      Provider<ClearFavoriteVideosUseCase> clearAllFavoriteVideosUseCaseProvider,
      Provider<DeleteFavoriteVideoUseCase> deleteFavoriteVideoUseCaseProvider,
      Provider<DialogManager> dialogManagerProvider,
      Provider<GetFavoriteVideosUseCase> getFavoriteVideosUseCaseProvider,
      Provider<ResourceProvider> resourceProvider) {
    this.clearAllFavoriteVideosUseCaseProvider = clearAllFavoriteVideosUseCaseProvider;
    this.deleteFavoriteVideoUseCaseProvider = deleteFavoriteVideoUseCaseProvider;
    this.dialogManagerProvider = dialogManagerProvider;
    this.getFavoriteVideosUseCaseProvider = getFavoriteVideosUseCaseProvider;
    this.resourceProvider = resourceProvider;
  }

  @Override
  public FavoritesVideoViewModel get() {
    return newInstance(clearAllFavoriteVideosUseCaseProvider.get(), deleteFavoriteVideoUseCaseProvider.get(), dialogManagerProvider.get(), getFavoriteVideosUseCaseProvider.get(), resourceProvider.get());
  }

  public static FavoritesVideoViewModel_Factory create(
      Provider<ClearFavoriteVideosUseCase> clearAllFavoriteVideosUseCaseProvider,
      Provider<DeleteFavoriteVideoUseCase> deleteFavoriteVideoUseCaseProvider,
      Provider<DialogManager> dialogManagerProvider,
      Provider<GetFavoriteVideosUseCase> getFavoriteVideosUseCaseProvider,
      Provider<ResourceProvider> resourceProvider) {
    return new FavoritesVideoViewModel_Factory(clearAllFavoriteVideosUseCaseProvider, deleteFavoriteVideoUseCaseProvider, dialogManagerProvider, getFavoriteVideosUseCaseProvider, resourceProvider);
  }

  public static FavoritesVideoViewModel newInstance(
      ClearFavoriteVideosUseCase clearAllFavoriteVideosUseCase,
      DeleteFavoriteVideoUseCase deleteFavoriteVideoUseCase, DialogManager dialogManager,
      GetFavoriteVideosUseCase getFavoriteVideosUseCase, ResourceProvider resourceProvider) {
    return new FavoritesVideoViewModel(clearAllFavoriteVideosUseCase, deleteFavoriteVideoUseCase, dialogManager, getFavoriteVideosUseCase, resourceProvider);
  }
}
